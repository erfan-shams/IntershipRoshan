import { useEffect, useState } from 'react'
import './Archive.css'
import { handleRequest } from './fetchRequests'
import { archiveClickHandler } from './archiveClickHandler'
export default function Archive() {
    const [requests, setRequests] = useState([])
    const [page, setPage] = useState(1)
    const [pages, setPages] = useState(13)
    useEffect(() => {
        setRequests(handleRequest({method:'get',  page:page }))
       

    }, [page])
    useEffect(() => {
        archiveClickHandler({requests,setRequests})
        
    }, [requests])

    
    return (
        <div className='archive'>

            <div className='headerIcon'>
                آرشیو من
            </div>
            <div className='archiveHeader'>
                <div id='arch_H_FN' style={{ right: '11%', position: 'absolute', fontFamily: 'IRANYekan', fontSize: '14px' }}>نام فایل</div>
                <div id='arch_H_DUP' style={{ right: '40%', position: 'absolute', fontSize: '14px' }}>تاریخ بارگذاری</div>
                <div id='arch_H_FT' style={{ right: '50%', position: 'absolute', fontSize: '14px' }}>نوع فایل</div>
                <div id='arch_H_Time' style={{ right: '58%', position: 'absolute', fontSize: '14px' }}>مدت زمان</div>
            </div>
            <div className="accordion-container">

                {
                    requests.map((item, index) => (
                        <ArchiveItem key={item.id} icon={item.icon} filename={item.filename} upload_date={item.upload_date}
                            file_type={item.file_type} duration={item.duration} duration={item.duration}
                            text={item.text} src_audio={item.src_audio} segments={item.segments} id={item.id} />
                    ))
                }
            </div>
            <div className='pagination' id='pagination'>
                <Pagination page={page} setPage={setPage} pages={pages} />
            </div>
        </div>
    )
}


function ArchiveItem({ id, icon, filename, upload_date, file_type, duration, text, src_audio, segments }) {
    return (
        <div className="accordion-item" id={'accordion-item'+id}>
            <div className="accordion-header">
                <div>
                    {
                        icon === 1 && <LinkIcon />
                    }
                    {
                        icon === 2 && <UploadIcon />
                    }
                    {
                        icon === 3 && <RecordIcon />
                    }

                </div>
                <div className="filename">{filename}</div>
                <div className="upload_date">{upload_date}</div>
                <div className="file_type">{file_type}</div>
                <div className="duration">{duration}</div>
                <div className='downloadIcon' data-text={text} data-filename={filename}><DownloadIcon /> </div>
                <div><WordIcon filename={filename} text={text} /> </div>
                <div className='copyIcon' data-text={text}><CopyIcon /> </div>
                <div className='delIcon' data-id={id}><DelIcon /> </div>
            </div>
            <div className="accordion-content">
                <div className="tabs-container">
                    <div className="tabs-header">
                        <div className="tab-button" data-tab="tab-simple">
                            <TabSimpleIcon />
                        </div>
                        <div className="tab-button active" data-tab="tab-timed">
                            <TabTimedIcon />
                        </div>
                    </div>

                    <div className="tabs-body">

                        <div className="tab-content active" id="tab-timed">

                            <div style={{ overflow: 'auto', maxHeight: '300px', height: '200px' }} >
                                <Segments segments={segments} />
                            </div>
                            <div className="media-player">

                                <audio style={{ width: '70%', marginRight: '15%' }}
                                    src={src_audio}
                                    controls> </audio>
                            </div>
                        </div>

                        <div className="tab-content" id="tab-simple">
                            <div
                                style={{ overflow: 'auto', maxHeight: '400px', height: '300px' }}>
                                <p className="simple-text-content">
                                    {text}
                                </p>
                            </div>
                            <div className="media-player">
                                <audio src={src_audio} style={{ width: '70%', marginRight: '15%' }}
                                    controls>

                                </audio>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    )
}

function LinkIcon() {
    return (
        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <ellipse cx="15.8801" cy="15.645" rx="15.8801" ry="15.645" fill="#FF1654" />
            <path d="M15.1553 10.8239L17.0139 8.99279C18.1892 7.96952 19.9385 8.07724 20.9772 9.20822C21.9338 10.2315 21.9338 11.8202 20.9772 12.8704L19.0912 14.7016L19.6652 15.267L21.5512 13.409C22.9451 12.0357 22.8905 9.77371 21.4692 8.40038C20.0752 7.0809 17.8613 7.0809 16.4673 8.40037L14.5813 10.2315C13.1873 11.6317 13.1873 13.8668 14.5813 15.267L15.1553 14.7016C14.0893 13.6244 14.0893 11.901 15.1553 10.8239Z" fill="white" />
            <path d="M14.8272 23.1033L16.7132 21.2722C18.1072 19.8719 18.1072 17.6369 16.7132 16.2635L16.1392 16.829C17.2325 17.9062 17.2325 19.6296 16.1392 20.7067L14.2532 22.5378C13.1599 23.6149 11.4106 23.6149 10.3173 22.5378C9.22401 21.4607 9.22401 19.7373 10.3173 18.6602L12.2033 16.829L11.6293 16.2635L9.77066 18.0947C8.32202 19.4411 8.24003 21.6761 9.60666 23.1033C10.9733 24.5305 13.2419 24.6113 14.6906 23.2649C14.7452 23.1841 14.7999 23.1571 14.8272 23.1033Z" fill="white" />
            <path d="M18.2286 13.8299L17.6488 13.2587L13.1263 17.7142L13.7061 18.2855L18.2286 13.8299Z" fill="white" />
        </svg>

    )
}

function UploadIcon() {
    return (
        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="15.645" cy="15.645" r="15.645" fill="#118AD3" />
            <path d="M18.5309 17.9764L15.7861 15.2317L13.0414 17.9764" stroke="white" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M15.786 15.2317V21.4073" stroke="white" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M21.543 19.6163C22.2123 19.2514 22.741 18.6741 23.0457 17.9754C23.3504 17.2767 23.4137 16.4964 23.2257 15.7577C23.0377 15.019 22.609 14.3639 22.0073 13.8959C21.4057 13.4279 20.6653 13.1735 19.903 13.173H19.0385C18.8308 12.3697 18.4436 11.6239 17.9062 10.9917C17.3688 10.3594 16.695 9.85729 15.9356 9.52295C15.1762 9.18861 14.3508 9.03079 13.5216 9.06134C12.6924 9.09189 11.8809 9.31003 11.1481 9.69934C10.4154 10.0887 9.78039 10.639 9.29094 11.3091C8.8015 11.9791 8.47031 12.7514 8.3223 13.5679C8.17428 14.3843 8.21328 15.2237 8.43636 16.0229C8.65945 16.8222 9.06081 17.5604 9.61028 18.1822" stroke="white" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M18.5309 17.9764L15.7861 15.2317L13.0414 17.9764" stroke="white" stroke-linecap="round" stroke-linejoin="round" />
        </svg>

    )
}

function RecordIcon() {
    return (
        <svg width="33" height="32" viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="16.4306" cy="15.645" r="15.645" fill="#40C6B8" />
            <path d="M16.1396 7L15.7075 7.02654L15.2842 7.10791L14.8747 7.23529L14.481 7.41573L14.1116 7.64217L13.7719 7.91107L13.467 8.22066L13.2022 8.56563L12.9809 8.9389L12.8014 9.33871L12.676 9.75621L12.5959 10.1861L12.5697 10.6248V16.9634L12.5959 17.4004L12.676 17.8285L12.8014 18.2477L12.9809 18.6475L13.2022 19.0208L13.467 19.3658L13.7719 19.6754L14.1116 19.9443L14.481 20.1707L14.8747 20.3512L15.2842 20.4803L15.7075 20.5581L16.1396 20.5864L16.5682 20.5581L16.9933 20.4803L17.4045 20.3512L17.7965 20.1707L18.1676 19.9443L18.5039 19.6754L18.8088 19.3658L19.0771 19.0208L19.2983 18.6475L19.4743 18.2477L19.6032 17.8285L19.6816 17.4004L19.706 16.9634V10.6248L19.6816 10.1861L19.6032 9.75621L19.4743 9.33871L19.2983 8.9389L19.0771 8.56563L18.8088 8.22066L18.5039 7.91107L18.1676 7.64217L17.7965 7.41573L17.4045 7.23529L16.9933 7.10791L16.5682 7.02654L16.1396 7ZM15.9567 7.91461H16.3226L16.6832 7.96414L17.0351 8.06321L17.3697 8.21181L17.6815 8.40464L17.9655 8.63639L18.2147 8.90883L18.4255 9.21134L18.5927 9.54215L18.7147 9.89066L18.7896 10.2533L18.8157 10.6248V16.9634L18.7896 17.3349L18.7147 17.6958L18.5927 18.0461L18.4255 18.3733L18.2147 18.6794L17.9655 18.9501L17.6815 19.1836L17.3697 19.3764L17.0351 19.5232L16.6832 19.6241L16.3226 19.6736H15.9567L15.5943 19.6241L15.2424 19.5232L14.9061 19.3764L14.5942 19.1836L14.312 18.9501L14.0628 18.6794L13.852 18.3733L13.683 18.0461L13.5611 17.6958L13.4896 17.3349L13.4635 16.9634V10.6248L13.4896 10.2533L13.5611 9.89066L13.683 9.54215L13.852 9.21134L14.0628 8.90883L14.312 8.63639L14.5942 8.40464L14.9061 8.21181L15.2424 8.06321L15.5943 7.96414L15.9567 7.91461ZM10.7856 16.9634L10.81 17.4676L10.878 17.9665L10.993 18.46L11.1515 18.9377L11.3536 19.3994L11.5975 19.8399L11.8815 20.2539L12.2004 20.6413L12.554 20.9986L12.9373 21.3171L13.3503 21.6001L13.7858 21.8443L14.2406 22.0459L14.7145 22.1998L15.2005 22.3131L15.6919 22.3785V24.2095H12.5697V25.1153H19.706V24.2095H16.5856V22.3785L17.077 22.3131L17.5631 22.1998L18.0352 22.0459L18.4934 21.8443L18.929 21.6001L19.3419 21.3171L19.7252 20.9986L20.0771 20.6413L20.3977 20.2539L20.68 19.8399L20.9239 19.3994L21.1242 18.9377L21.2845 18.46L21.3995 17.9665L21.4692 17.4676L21.4901 16.9634H20.5998L20.5737 17.4357L20.5005 17.9045L20.382 18.3627L20.213 18.805L20.0022 19.2278L19.7461 19.6258L19.4534 19.992L19.1224 20.3282L18.76 20.6271L18.368 20.8837L17.9533 21.1012L17.5178 21.2693L17.0648 21.3931L16.6066 21.4674L16.1396 21.4904L15.6727 21.4674L15.211 21.3931L14.7615 21.2693L14.3259 21.1012L13.9078 20.8837L13.5175 20.6271L13.1534 20.3282L12.8224 19.992L12.5297 19.6258L12.277 19.2278L12.0645 18.805L11.8972 18.3627L11.7753 17.9045L11.7021 17.4357L11.6794 16.9634H10.7856Z" fill="white" />
        </svg>

    )
}

function DownloadIcon() {
    const [fill, setFill] = useState('#8F8F8F')
    return (

        <svg onMouseEnter={() => { setFill('#07B49B') }} onMouseLeave={() => { setFill('#8F8F8F') }} width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6.39307 10C6.32739 10.0001 6.26235 9.98485 6.20166 9.95523C6.14098 9.92561 6.08584 9.88217 6.0394 9.82739C5.99296 9.77261 5.95613 9.70757 5.93102 9.63599C5.90591 9.5644 5.89301 9.48768 5.89307 9.41021V0.58979C5.89307 0.433368 5.94574 0.283352 6.03951 0.172745C6.13328 0.0621384 6.26046 0 6.39307 0C6.52567 0 6.65285 0.0621384 6.74662 0.172745C6.84039 0.283352 6.89307 0.433368 6.89307 0.58979V9.41021C6.89307 9.56663 6.84039 9.71665 6.74662 9.82725C6.65285 9.93786 6.52567 10 6.39307 10Z" fill={fill} />
            <path d="M6.60354 10.5151C6.42349 10.5154 6.24516 10.4801 6.0788 10.4112C5.91243 10.3424 5.76131 10.2414 5.63411 10.1139L2.74082 7.22064C2.6404 7.12022 2.58398 6.98402 2.58398 6.842C2.58398 6.69998 2.6404 6.56378 2.74082 6.46336C2.84125 6.36294 2.97745 6.30652 3.11947 6.30652C3.26148 6.30652 3.39769 6.36294 3.49811 6.46336L6.39139 9.35664C6.41925 9.3845 6.45233 9.4066 6.48873 9.42168C6.52513 9.43676 6.56414 9.44452 6.60354 9.44452C6.64294 9.44452 6.68195 9.43676 6.71835 9.42168C6.75475 9.4066 6.78782 9.3845 6.81568 9.35664L9.70897 6.46336C9.80998 6.36574 9.94528 6.31171 10.0857 6.31289C10.2262 6.31407 10.3606 6.37037 10.4599 6.46967C10.5593 6.56897 10.6157 6.70332 10.6169 6.84378C10.6182 6.98424 10.5642 7.11958 10.4667 7.22064L7.57297 10.1139C7.44574 10.2413 7.29461 10.3423 7.12825 10.4112C6.96189 10.48 6.78358 10.5153 6.60354 10.5151Z" fill={fill} />
            <path d="M12.1319 14.5984H1.2892C0.947409 14.598 0.619735 14.4482 0.378053 14.1819C0.13637 13.9157 0.000411796 13.5547 0 13.1782V9.4333C0 9.29122 0.0512319 9.15496 0.142425 9.05449C0.233619 8.95402 0.357303 8.89758 0.48627 8.89758C0.615237 8.89758 0.738922 8.95402 0.830115 9.05449C0.921308 9.15496 0.97254 9.29122 0.97254 9.4333V13.1782C0.972643 13.2706 1.00604 13.3593 1.0654 13.4247C1.12476 13.4901 1.20525 13.5269 1.2892 13.527H12.1319C12.2158 13.5269 12.2963 13.4901 12.3557 13.4247C12.415 13.3593 12.4484 13.2706 12.4485 13.1782V9.4333C12.4485 9.29122 12.4997 9.15496 12.5909 9.05449C12.6821 8.95402 12.8058 8.89758 12.9348 8.89758C13.0638 8.89758 13.1874 8.95402 13.2786 9.05449C13.3698 9.15496 13.4211 9.29122 13.4211 9.4333V13.1782C13.4206 13.5547 13.2847 13.9157 13.043 14.1819C12.8013 14.4482 12.4736 14.598 12.1319 14.5984Z" fill={fill} />
        </svg>

    )
}

function WordIcon() {
    const [fill, setFill] = useState('#8F8F8F')
    return (
        <svg onMouseEnter={() => { setFill('#07B49B') }} onMouseLeave={() => { setFill('#8F8F8F') }} width="13" height="18" viewBox="0 0 13 18" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.7 17.08H1.3C0.585 17.08 0 16.495 0 15.78V2.25996C0 1.54496 0.585 0.959961 1.3 0.959961H6.591C6.942 0.959961 7.753 1.25294 8 1.49994L12.5 5.99994C12.747 6.24694 13 7.01796 13 7.36896V15.78C13 16.495 12.415 17.08 11.7 17.08ZM1.3 1.99994C0.871 1.99994 1 1.83096 1 2.25996V15.2031C1 15.6321 1.571 15.9999 2 15.9999H10.5C10.929 15.9999 12 16.209 12 15.78V7.49994C12 7.29194 11.656 6.64294 11.5 6.49994L8.5 3.49994C7.5 2.49994 7 1.99994 7 1.99994H1.3Z" fill={fill} />
            <path d="M8.41107 13.1799H7.33207L6.73407 10.8399C6.70807 10.7619 6.66907 10.5799 6.61707 10.3199C6.56507 10.0599 6.52607 9.87795 6.52607 9.79995C6.51307 9.90395 6.48707 10.0859 6.43507 10.3329C6.38307 10.5799 6.34407 10.7489 6.31807 10.8529L5.72007 13.1799H4.64107L3.51007 8.72095H4.43307L5.00507 11.1519C5.10907 11.6069 5.17407 11.9839 5.22607 12.3219C5.23907 12.2049 5.26507 12.0229 5.30407 11.7889C5.34307 11.5549 5.39507 11.3599 5.42107 11.2299L6.07107 8.73395H6.96807L7.61807 11.2299C7.64407 11.3469 7.68307 11.5159 7.72207 11.7369C7.76107 11.9579 7.80007 12.1659 7.82607 12.3219C7.85207 12.1659 7.87807 11.9709 7.93007 11.7239C7.98207 11.4769 8.02107 11.2949 8.04707 11.1519L8.61907 8.72095H9.54207L8.41107 13.1799Z" fill={fill} />
        </svg>

    )
}

function CopyIcon() {
    const [fill, setFill] = useState('#8F8F8F')
    return (
        <svg onMouseEnter={() => { setFill('#07B49B') }} onMouseLeave={() => { setFill('#8F8F8F') }} width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6.22843 14.8919H13.5574C13.94 14.8915 14.3067 14.7393 14.5771 14.4688C14.8476 14.1982 14.9997 13.8315 15 13.4489V6.12037C14.9995 5.73795 14.8474 5.37133 14.577 5.10097C14.3065 4.8306 13.9398 4.67856 13.5574 4.67822H6.22886C5.84648 4.67856 5.47986 4.83061 5.20948 5.10099C4.9391 5.37137 4.78706 5.73799 4.78671 6.12037V13.4489C4.78694 13.8314 4.93887 14.1981 5.20916 14.4686C5.47944 14.7391 5.84601 14.8914 6.22843 14.8919ZM13.5574 5.74965C13.6558 5.74965 13.7501 5.78869 13.8197 5.8582C13.8893 5.92771 13.9285 6.02201 13.9286 6.12037V13.4489C13.9286 13.5474 13.8895 13.6419 13.8199 13.7115C13.7503 13.7812 13.6559 13.8204 13.5574 13.8205H6.22886C6.13046 13.8203 6.03617 13.781 5.96667 13.7114C5.89717 13.6417 5.85814 13.5473 5.85814 13.4489V6.12037C5.85814 6.02205 5.8972 5.92775 5.96672 5.85823C6.03624 5.78871 6.13054 5.74965 6.22886 5.74965H13.5574Z" fill={fill} />
            <path d="M1.65684 10.3195H5.31984C5.46192 10.3195 5.59818 10.2631 5.69864 10.1626C5.79911 10.0622 5.85555 9.92591 5.85555 9.78383C5.85555 9.64175 5.79911 9.50549 5.69864 9.40502C5.59818 9.30455 5.46192 9.24811 5.31984 9.24811H1.65684C1.55844 9.248 1.4641 9.20886 1.39452 9.13928C1.32495 9.0697 1.28581 8.97537 1.28569 8.87697V1.55054C1.28581 1.45218 1.32496 1.35789 1.39455 1.28838C1.46414 1.21887 1.55848 1.17983 1.65684 1.17983H8.98541C9.08377 1.17983 9.1781 1.21887 9.24769 1.28838C9.31728 1.35789 9.35644 1.45218 9.35655 1.55054V5.21397C9.35655 5.35605 9.41299 5.49231 9.51346 5.59278C9.61392 5.69324 9.75018 5.74968 9.89226 5.74968C10.0343 5.74968 10.1706 5.69324 10.2711 5.59278C10.3715 5.49231 10.428 5.35605 10.428 5.21397V1.55054C10.4275 1.1685 10.2757 0.802205 10.0057 0.531898C9.73571 0.261591 9.36959 0.109305 8.98755 0.108398H1.65684C1.27442 0.108739 0.90776 0.260774 0.637311 0.531142C0.366862 0.80151 0.214718 1.16813 0.214264 1.55054V8.87911C0.215284 9.2612 0.367665 9.62731 0.638041 9.89728C0.908415 10.1673 1.27475 10.3191 1.65684 10.3195Z" fill={fill} />
        </svg>

    )
}

function DelIcon() {
    const [fill, setFill] = useState('#8F8F8F')
    return (
        <svg onMouseEnter={() => { setFill('#07B49B') }} onMouseLeave={() => { setFill('#8F8F8F') }} width="11" height="16" viewBox="0 0 11 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.49172 2.56921H9.94577C10.2182 2.56921 10.4375 2.78444 10.4375 3.05179V14.5174C10.4375 14.7847 10.2182 14.9999 9.94577 14.9999H1.49172C1.21931 14.9999 1 14.7847 1 14.5174V3.05179C1 2.78444 1.21931 2.56921 1.49172 2.56921V2.56921Z" stroke={fill} stroke-miterlimit="6.2" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M1.03578 1.42249H10.4302" stroke={fill} stroke-linecap="round" stroke-linejoin="round" />
            <path d="M3.04933 4.17505V13.3949" stroke={fill} stroke-linecap="round" stroke-linejoin="round" />
            <path d="M5.71863 4.17505V13.3949" stroke={fill} stroke-linecap="round" stroke-linejoin="round" />
            <path d="M8.38811 4.17505V13.3949" stroke={fill} stroke-linecap="round" stroke-linejoin="round" />
            <path d="M4.35373 1H7.11263" stroke={fill} stroke-linecap="round" stroke-linejoin="round" />
        </svg>

    )
}

function TabSimpleIcon() {
    return (
        <svg width="81" height="24" viewBox="0 0 81 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <path
                d="M3.93365 16C3.57304 16 3.23365 15.9427 2.91547 15.8282C2.60153 15.7094 2.32577 15.5482 2.0882 15.3445C1.85486 15.1409 1.6682 14.9033 1.5282 14.6318C1.39244 14.3561 1.32456 14.0633 1.32456 13.7536C1.32456 13.4567 1.36486 13.183 1.44547 12.9327C1.52607 12.6824 1.62577 12.4533 1.74456 12.2455C1.86759 12.0333 1.99911 11.8424 2.13911 11.6727C2.27911 11.4988 2.40638 11.3418 2.52092 11.2018C2.58456 11.1255 2.65456 11.0448 2.73092 10.96C2.80729 10.8752 2.88365 10.7924 2.96001 10.7118C3.03638 10.627 3.11062 10.5485 3.18274 10.4764C3.25911 10.4 3.32698 10.33 3.38638 10.2664L2.89001 9.71273L3.46274 9.19091C3.46698 9.19091 3.51789 9.24606 3.61547 9.35636C3.71729 9.46242 3.84456 9.6003 3.99729 9.77C4.15426 9.9397 4.32607 10.1285 4.51274 10.3364C4.69941 10.5442 4.87971 10.75 5.05365 10.9536C5.26577 11.1955 5.46304 11.4309 5.64547 11.66C5.82789 11.8891 5.98486 12.1161 6.11638 12.3409C6.25214 12.5658 6.3582 12.7927 6.43456 13.0218C6.51092 13.2467 6.54911 13.4821 6.54911 13.7282C6.54911 14.0464 6.47911 14.3476 6.33911 14.6318C6.20335 14.9118 6.00395 15.16 5.74092 15.3764C5.49911 15.58 5.22335 15.7348 4.91365 15.8409C4.60395 15.947 4.27729 16 3.93365 16ZM3.91456 10.8455C3.85517 10.9048 3.79153 10.9706 3.72365 11.0427C3.65577 11.1106 3.58577 11.1827 3.51365 11.2591C3.44577 11.3312 3.37789 11.4055 3.31001 11.4818C3.24638 11.5539 3.18698 11.6239 3.13183 11.6918C3.03001 11.8148 2.91759 11.9506 2.79456 12.0991C2.67577 12.2433 2.56547 12.4024 2.46365 12.5764C2.36183 12.7461 2.27698 12.9306 2.20911 13.13C2.14123 13.3252 2.10729 13.533 2.10729 13.7536C2.10729 13.9445 2.15183 14.1291 2.24092 14.3073C2.33001 14.4812 2.45729 14.6361 2.62274 14.7718C2.80092 14.9161 3.00244 15.0264 3.22729 15.1027C3.45638 15.1791 3.69183 15.2173 3.93365 15.2173C4.1882 15.2173 4.42577 15.1791 4.64638 15.1027C4.87123 15.0221 5.06638 14.9161 5.23183 14.7845C5.39729 14.6488 5.52668 14.4897 5.62001 14.3073C5.71759 14.1248 5.76638 13.9318 5.76638 13.7282C5.76638 13.567 5.7388 13.4058 5.68365 13.2445C5.6285 13.0791 5.54577 12.9073 5.43547 12.7291C5.32941 12.5467 5.19365 12.3536 5.0282 12.15C4.86698 11.9421 4.6782 11.713 4.46183 11.4627L3.91456 10.8455ZM10.8891 16.0509C10.5666 16.0509 10.24 16.0255 9.90906 15.9745C9.57815 15.9236 9.26845 15.8515 8.97996 15.7582C8.69148 15.6606 8.43906 15.5482 8.22269 15.4209L7.88542 15.2236L8.28633 14.5491L8.6236 14.7527C8.80178 14.8588 9.0139 14.95 9.25996 15.0264C9.50603 15.1027 9.76481 15.1621 10.0363 15.2045C10.3078 15.2427 10.5836 15.2618 10.8636 15.2618H10.94C11.186 15.2618 11.4172 15.2427 11.6336 15.2045C11.9136 15.1579 12.1491 15.0752 12.34 14.9564C12.5309 14.8376 12.6624 14.6912 12.7345 14.5173C12.7769 14.4112 12.7981 14.2988 12.7981 14.18C12.7981 14.1248 12.7875 14.0379 12.7663 13.9191C12.7451 13.7961 12.6709 13.6391 12.5436 13.4482C12.2169 12.9603 11.9369 12.5403 11.7036 12.1882C11.4703 11.8361 11.273 11.5391 11.1118 11.2973C10.9506 11.0512 10.8212 10.8539 10.7236 10.7055C10.626 10.557 10.5497 10.4424 10.4945 10.3618C10.4436 10.2812 10.4075 10.2282 10.3863 10.2027C10.3694 10.173 10.3609 10.1561 10.3609 10.1518L10.1509 9.82091L10.8127 9.40091C10.8466 9.4603 10.8848 9.52394 10.9272 9.59182C10.9739 9.65545 11.0312 9.7403 11.0991 9.84636C11.1669 9.95242 11.2539 10.0882 11.36 10.2536C11.4703 10.4148 11.606 10.6206 11.7672 10.8709C11.9327 11.117 12.1321 11.4161 12.3654 11.7682C12.5988 12.1161 12.8745 12.5318 13.1927 13.0155C13.3963 13.3209 13.5215 13.6285 13.5681 13.9382C13.5809 14.0188 13.5872 14.0994 13.5872 14.18C13.5872 14.4006 13.5427 14.6148 13.4536 14.8227C13.3263 15.1239 13.1184 15.3742 12.83 15.5736C12.5415 15.7688 12.1872 15.9024 11.7672 15.9745C11.5 16.0255 11.2072 16.0509 10.8891 16.0509ZM17.5803 16C17.0754 16 16.6703 15.9406 16.3648 15.8218C16.0636 15.703 15.8324 15.527 15.6712 15.2936C15.51 15.0603 15.4039 14.7739 15.353 14.4345C15.3021 14.0909 15.2766 13.6964 15.2766 13.2509V6.91909H16.0721V13.2509C16.0721 13.6455 16.0848 13.97 16.1103 14.2245C16.1357 14.4791 16.1994 14.6806 16.3012 14.8291C16.403 14.9733 16.5536 15.0752 16.753 15.1345C16.9566 15.1897 17.2324 15.2173 17.5803 15.2173H17.6694V16H17.5803ZM17.4386 15.2173H18.6414C18.7983 15.2173 18.9553 15.1918 19.1123 15.1409C19.2735 15.09 19.4198 15.0094 19.5514 14.8991C19.6829 14.7888 19.7889 14.6445 19.8695 14.4664C19.9544 14.2839 19.9968 14.0612 19.9968 13.7982V11.7045H20.7795V13.7982C20.7795 14.7315 21.2886 15.2045 22.3068 15.2173C22.4638 15.2173 22.6208 15.1918 22.7777 15.1409C22.9389 15.09 23.0853 15.0094 23.2168 14.8991C23.3483 14.7888 23.4544 14.6445 23.535 14.4664C23.6198 14.2839 23.6623 14.0612 23.6623 13.7982V11.7045H24.445V13.7982C24.445 14.7315 24.9541 15.2045 25.9723 15.2173V15.2109C26.125 15.2109 26.2777 15.1876 26.4304 15.1409C26.5874 15.09 26.7274 15.0094 26.8504 14.8991C26.9777 14.7845 27.0817 14.6382 27.1623 14.46C27.2429 14.2776 27.2832 14.0548 27.2832 13.7918C27.2832 13.6391 27.2704 13.4694 27.245 13.2827C27.2195 13.0918 27.1856 12.8988 27.1432 12.7036C27.105 12.5042 27.0626 12.3112 27.0159 12.1245C26.9735 11.9379 26.9311 11.7724 26.8886 11.6282C26.8504 11.4797 26.8186 11.3609 26.7932 11.2718C26.7677 11.1785 26.755 11.1297 26.755 11.1255L27.4995 10.8964C27.5038 10.9091 27.5208 10.9664 27.5504 11.0682C27.5801 11.17 27.6162 11.2994 27.6586 11.4564C27.7011 11.6133 27.7456 11.7915 27.7923 11.9909C27.8389 12.1903 27.8814 12.3961 27.9195 12.6082C27.962 12.8161 27.9959 13.0239 28.0214 13.2318C28.0511 13.4355 28.0659 13.6221 28.0659 13.7918C28.0659 14.0082 28.0447 14.2055 28.0023 14.3836C27.9641 14.5576 27.9111 14.7124 27.8432 14.8482C27.7795 14.9839 27.7074 15.1027 27.6268 15.2045C27.5504 15.3064 27.4741 15.3912 27.3977 15.4591C27.2111 15.6288 26.9989 15.7603 26.7614 15.8536C26.5238 15.9427 26.2714 15.9894 26.0041 15.9936V16C25.2447 16 24.655 15.79 24.235 15.37C24.2011 15.3361 24.1692 15.3 24.1395 15.2618C24.1098 15.2236 24.0801 15.1833 24.0504 15.1409C24.0038 15.2088 23.955 15.2703 23.9041 15.3255C23.8532 15.3764 23.8044 15.423 23.7577 15.4655C23.5626 15.6394 23.3356 15.773 23.0768 15.8664C22.818 15.9555 22.5508 16 22.275 16C21.5071 16 20.9132 15.79 20.4932 15.37C20.4592 15.3361 20.4274 15.3 20.3977 15.2618C20.368 15.2236 20.3383 15.1833 20.3086 15.1409C20.262 15.2088 20.2132 15.2703 20.1623 15.3255C20.1114 15.3764 20.0626 15.423 20.0159 15.4655C19.8208 15.6394 19.598 15.773 19.3477 15.8664C19.1017 15.9555 18.8408 16 18.565 16H17.4386V15.2173ZM44.1023 15.2173V16H43.905C43.642 16 43.3938 15.9597 43.1604 15.8791C42.9271 15.7985 42.715 15.6818 42.5241 15.5291V16.3182C42.5241 17.277 42.2992 18.0152 41.8495 18.5327C41.6841 18.7279 41.4974 18.887 41.2895 19.01C41.0859 19.1373 40.8674 19.237 40.6341 19.3091C40.4008 19.3855 40.1547 19.4385 39.8959 19.4682C39.6414 19.4979 39.3804 19.5127 39.1132 19.5127H37.6177C37.0068 19.5127 36.4511 19.377 35.9504 19.1055C35.4498 18.8382 35.0447 18.4564 34.735 17.96C34.5186 17.6164 34.3595 17.2452 34.2577 16.8464C34.1686 16.5155 34.1241 16.1548 34.1241 15.7645C34.1241 15.6839 34.1262 15.6033 34.1304 15.5227C34.1517 14.9924 34.245 14.4409 34.4104 13.8682C34.5759 13.2955 34.8092 12.6994 35.1104 12.08L35.8104 12.4173C35.5559 12.9476 35.3544 13.4567 35.2059 13.9445C35.0617 14.4282 34.9726 14.8864 34.9386 15.3191C34.9259 15.4633 34.9195 15.6033 34.9195 15.7391C34.9195 16.0148 34.9514 16.3097 35.015 16.6236C35.0786 16.9376 35.2059 17.2452 35.3968 17.5464C35.6344 17.9239 35.9462 18.2145 36.3323 18.4182C36.7183 18.6261 37.1468 18.73 37.6177 18.73H39.1132C40.1398 18.73 40.8547 18.4945 41.2577 18.0236C41.5801 17.6503 41.7414 17.0818 41.7414 16.3182V11.6982H42.5241V13.7982C42.5241 14.0103 42.558 14.2033 42.6259 14.3773C42.6938 14.5512 42.7871 14.6997 42.9059 14.8227C43.0289 14.9458 43.1753 15.0433 43.345 15.1155C43.5147 15.1833 43.7014 15.2173 43.905 15.2173H44.1023ZM37.9741 11.2209L38.7886 10.3936L39.6286 11.2336L38.8014 12.0609L37.9741 11.2209ZM50.7836 15.2173V16H49.74C49.4558 16 49.1864 15.9576 48.9318 15.8727C48.6773 15.7879 48.4545 15.667 48.2636 15.51C48.1491 15.4167 48.0536 15.3191 47.9773 15.2173C47.7609 15.4888 47.4894 15.6861 47.1627 15.8091C46.8361 15.9321 46.4394 15.9958 45.9727 16H43.8727V15.2173H45.9727C46.223 15.2088 46.4458 15.1855 46.6409 15.1473C46.8361 15.1091 47.0015 15.0433 47.1373 14.95C47.273 14.8567 47.377 14.7336 47.4491 14.5809C47.5255 14.4239 47.5679 14.2245 47.5764 13.9827V11.6982H48.3591V13.9827C48.3591 14.2118 48.4015 14.4048 48.4864 14.5618C48.5712 14.7188 48.6794 14.8461 48.8109 14.9436C48.9424 15.0412 49.0888 15.1112 49.25 15.1536C49.4155 15.1961 49.5788 15.2173 49.74 15.2173H50.7836ZM48.7982 9.69364L48.0091 8.89818C48.1533 8.7497 48.2827 8.61818 48.3973 8.50364C48.5161 8.38485 48.6455 8.25333 48.7855 8.10909L49.5873 8.90455L48.7982 9.69364ZM46.2145 9.68091L45.4255 8.88545C45.5697 8.73697 45.6991 8.60545 45.8136 8.49091C45.9324 8.37212 46.0618 8.24061 46.2018 8.09636L47.0036 8.89182L46.2145 9.68091ZM55.2591 15.5164C55.3906 15.5164 55.5221 15.4824 55.6537 15.4145C55.7894 15.3467 55.9082 15.2364 56.01 15.0836C56.1161 14.9309 56.2009 14.7315 56.2646 14.4855C56.3324 14.2352 56.3664 13.9318 56.3664 13.5755C56.3664 13.3209 56.324 13.0642 56.2391 12.8055C56.1585 12.5424 56.044 12.3091 55.8955 12.1055C55.8531 12.0461 55.7979 11.9803 55.73 11.9082C55.6664 11.8361 55.59 11.7682 55.5009 11.7045C55.4118 11.6409 55.3121 11.5879 55.2018 11.5455C55.0915 11.4988 54.9727 11.4755 54.8455 11.4755C54.5697 11.4755 54.3385 11.5264 54.1518 11.6282C53.9652 11.7258 53.8061 11.8679 53.6746 12.0545C53.5473 12.2412 53.437 12.4703 53.3437 12.7418C53.2503 13.0091 53.157 13.3124 53.0637 13.6518C53.0212 13.8088 52.9788 13.9615 52.9364 14.11C52.894 14.2585 52.8473 14.4027 52.7964 14.5427C53.0679 14.6785 53.3203 14.8079 53.5537 14.9309C53.787 15.0539 54.0034 15.16 54.2027 15.2491C54.4021 15.3382 54.5888 15.4061 54.7627 15.4527C54.9112 15.4952 55.0534 15.5164 55.1891 15.5164H55.2591ZM54.8455 10.6927C55.1679 10.6927 55.4712 10.7755 55.7555 10.9409C56.044 11.1021 56.3006 11.3376 56.5255 11.6473C56.7249 11.9188 56.8776 12.2221 56.9837 12.5573C57.094 12.8924 57.1491 13.2318 57.1491 13.5755C57.1491 13.7961 57.1343 14.0167 57.1046 14.2373C57.0749 14.4536 57.0282 14.6636 56.9646 14.8673C56.9052 15.0709 56.8246 15.2597 56.7227 15.4336C56.6252 15.6076 56.5064 15.7582 56.3664 15.8855C56.2264 16.0127 56.0652 16.1124 55.8827 16.1845C55.7003 16.2609 55.4924 16.2991 55.2591 16.2991C55.047 16.2991 54.8391 16.2715 54.6355 16.2164C54.4318 16.1655 54.2176 16.0933 53.9927 16C53.7721 15.9067 53.5367 15.7964 53.2864 15.6691C53.0361 15.5418 52.7603 15.4018 52.4591 15.2491C52.1324 15.7497 51.6785 16 51.0973 16H50.5309V15.2173H51.0973C51.2627 15.2173 51.4027 15.1833 51.5173 15.1155C51.6361 15.0433 51.7421 14.9288 51.8355 14.7718C51.9373 14.6064 52.0243 14.4091 52.0964 14.18C52.1685 13.9467 52.2406 13.7027 52.3127 13.4482C52.3976 13.1342 52.4888 12.8224 52.5864 12.5127C52.6882 12.203 52.8282 11.9167 53.0064 11.6536C53.4434 11.013 54.0564 10.6927 54.8455 10.6927Z"
                fill="black" />
            <g opacity="0.6">
                <path d="M65.4781 8.69571H79.7064"
                    stroke="black"
                    stroke-linecap="round"
                    stroke-linejoin="round" />
                <path d="M69.3586 11.9293H79.7065"
                    stroke="black"
                    stroke-linecap="round"
                    stroke-linejoin="round" />
                <path d="M65.4781 15.163H79.7064"
                    stroke="black"
                    stroke-linecap="round"
                    stroke-linejoin="round" />
                <path d="M69.3586 18.3967H79.7065"
                    stroke="black"
                    stroke-linecap="round"
                    stroke-linejoin="round" />
            </g>
        </svg>

    )
}

function TabTimedIcon() {
    return (
        <svg width="137" height="24"
            viewBox="0 0 137 24" fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <path
                d="M3.58896 16C3.20714 16 2.85502 15.9427 2.53259 15.8282C2.21441 15.7094 1.93653 15.5482 1.69896 15.3445C1.46562 15.1367 1.2832 14.8927 1.15168 14.6127C1.02017 14.3285 0.954411 14.0209 0.954411 13.69C0.954411 13.2658 1.00956 12.8924 1.11987 12.57C1.23441 12.2433 1.37865 11.9506 1.55259 11.6918C1.72653 11.4288 1.91744 11.1891 2.12532 10.9727C2.3332 10.7564 2.53259 10.5442 2.7235 10.3364L2.32896 9.89727L3.21987 9.08909C3.44047 9.33515 3.66744 9.58333 3.90077 9.83364C4.13835 10.0797 4.36956 10.33 4.59441 10.5845C4.81926 10.8348 5.02926 11.0873 5.22441 11.3418C5.4238 11.5921 5.59774 11.8445 5.74623 12.0991C5.89471 12.3494 6.0135 12.5997 6.10259 12.85C6.1832 13.0918 6.2235 13.3294 6.2235 13.5627V13.6009C6.21926 13.9445 6.14926 14.267 6.0135 14.5682C5.88199 14.8652 5.68896 15.1282 5.43441 15.3573C5.19683 15.5609 4.91896 15.72 4.60077 15.8345C4.28683 15.9448 3.94956 16 3.58896 16ZM3.50623 11.1955C3.34502 11.3779 3.1838 11.5603 3.02259 11.7427C2.86138 11.9209 2.71714 12.1097 2.58987 12.3091C2.46259 12.5085 2.35865 12.7206 2.27805 12.9455C2.19744 13.1703 2.15714 13.4185 2.15714 13.69C2.15714 13.8809 2.19744 14.0464 2.27805 14.1864C2.3629 14.3221 2.47108 14.4367 2.60259 14.53C2.73835 14.6191 2.89108 14.687 3.06077 14.7336C3.23471 14.7761 3.41077 14.7973 3.58896 14.7973C3.80532 14.7973 4.00047 14.7697 4.17441 14.7145C4.35259 14.6552 4.5032 14.5724 4.62623 14.4664C4.7535 14.3603 4.85108 14.2352 4.91896 14.0909C4.98683 13.9424 5.02077 13.7791 5.02077 13.6009C5.02077 13.3888 4.97623 13.1809 4.88714 12.9773C4.79805 12.7694 4.68138 12.5658 4.53714 12.3664C4.39714 12.167 4.23593 11.9697 4.0535 11.7745C3.87108 11.5794 3.68865 11.3864 3.50623 11.1955ZM14.9289 14.7973V16H14.6935C14.0613 16 13.478 15.737 12.9435 15.2109C12.6253 15.6394 12.0674 15.9109 11.2698 16.0255C11.1213 16.0467 10.9644 16.0636 10.7989 16.0764C10.6335 16.0891 10.4616 16.0955 10.2835 16.0955C10.0671 16.0955 9.8486 16.0848 9.628 16.0636C9.40739 16.0467 9.19103 16.0191 8.97891 15.9809C8.77103 15.9385 8.56951 15.8855 8.37436 15.8218C8.17921 15.7539 8.00315 15.6755 7.84618 15.5864L7.32436 15.2809L7.92254 14.2309L8.45072 14.5364C8.59921 14.6212 8.77951 14.6912 8.99163 14.7464C9.208 14.7973 9.43709 14.8333 9.67891 14.8545C9.86133 14.8715 10.0438 14.88 10.2262 14.88C10.2898 14.88 10.398 14.88 10.5507 14.88C10.7035 14.8758 10.8859 14.8588 11.098 14.8291C11.3441 14.7909 11.5456 14.7379 11.7025 14.67C11.8638 14.5979 11.9656 14.5173 12.008 14.4282C12.0462 14.3858 12.0653 14.3327 12.0653 14.2691C12.0653 14.2267 12.0504 14.1588 12.0207 14.0655C11.991 13.9679 11.9253 13.8406 11.8235 13.6836L9.43709 10.05L10.4489 9.38818L12.918 13.1555C13.0453 13.3379 13.1725 13.5267 13.2998 13.7218C13.4313 13.9127 13.5692 14.0888 13.7135 14.25C13.8577 14.407 14.0083 14.5385 14.1653 14.6445C14.3265 14.7464 14.5025 14.7973 14.6935 14.7973H14.9289ZM19.6313 15.9873C19.2325 15.9873 18.8783 15.93 18.5686 15.8155C18.2589 15.6967 17.998 15.527 17.7858 15.3064C17.5652 15.5439 17.3086 15.72 17.0158 15.8345C16.7231 15.9448 16.4283 16 16.1313 16H14.6676V14.7973H16.1313C16.1949 14.7973 16.2861 14.7888 16.4049 14.7718C16.5237 14.7506 16.6404 14.7018 16.7549 14.6255C16.8695 14.5448 16.9692 14.4261 17.054 14.2691C17.1431 14.1121 17.1876 13.8979 17.1876 13.6264V11.6982H18.3904V13.6009C18.3904 14.0124 18.4858 14.3136 18.6767 14.5045C18.8719 14.6955 19.1901 14.7909 19.6313 14.7909C19.6949 14.7909 19.784 14.7803 19.8986 14.7591C20.0173 14.7336 20.134 14.6806 20.2486 14.6C20.3673 14.5194 20.4692 14.4006 20.554 14.2436C20.6431 14.0867 20.6876 13.8724 20.6876 13.6009V11.6982H21.884V13.6009C21.884 14.0124 21.9837 14.3158 22.1831 14.5109C22.3825 14.7061 22.7028 14.8036 23.144 14.8036C23.2119 14.8036 23.3031 14.7909 23.4176 14.7655C23.5322 14.7358 23.6446 14.6785 23.7549 14.5936C23.8695 14.5088 23.967 14.3879 24.0476 14.2309C24.1283 14.0739 24.1686 13.8639 24.1686 13.6009C24.1686 13.5076 24.1601 13.3909 24.1431 13.2509C24.1304 13.1109 24.1113 12.9603 24.0858 12.7991C24.0646 12.6379 24.0392 12.4745 24.0095 12.3091C23.9798 12.1394 23.9501 11.9824 23.9204 11.8382C23.8907 11.6897 23.8631 11.5582 23.8376 11.4436C23.8122 11.3248 23.791 11.2379 23.774 11.1827L24.9131 10.82C24.9216 10.8455 24.9386 10.9133 24.964 11.0236C24.9895 11.1297 25.0192 11.2633 25.0531 11.4245C25.087 11.5815 25.121 11.7576 25.1549 11.9527C25.1931 12.1479 25.227 12.3452 25.2567 12.5445C25.2907 12.7397 25.3183 12.9306 25.3395 13.1173C25.3607 13.2997 25.3713 13.4609 25.3713 13.6009C25.3713 14.0039 25.3055 14.3561 25.174 14.6573C25.0425 14.9542 24.8707 15.2024 24.6586 15.4018C24.4507 15.597 24.2131 15.7455 23.9458 15.8473C23.6786 15.9448 23.4113 15.9958 23.144 16C22.7367 16 22.3761 15.9406 22.0622 15.8218C21.7525 15.6988 21.4895 15.5227 21.2731 15.2936C21.0525 15.527 20.7958 15.7009 20.5031 15.8155C20.2146 15.93 19.924 15.9873 19.6313 15.9873ZM22.2467 7.08455L21.3431 7.96909L20.4522 7.08455L21.3686 6.17455L22.2467 7.08455ZM22.5586 9.96091L21.5531 8.94273L22.5458 7.91182L23.5767 8.94273L22.5586 9.96091ZM20.1213 9.94818L19.1158 8.93L20.1086 7.89909L21.1395 8.93L20.1213 9.94818ZM36.4822 18.2973C36.9064 18.2973 37.2734 18.2591 37.5831 18.1827C37.897 18.1106 38.1558 17.9939 38.3595 17.8327C38.5631 17.6715 38.7137 17.4615 38.8113 17.2027C38.9089 16.9439 38.9576 16.63 38.9576 16.2609C38.5504 16.1548 38.1516 16.0488 37.7613 15.9427C37.5958 15.9003 37.4219 15.8558 37.2395 15.8091C37.057 15.7582 36.8746 15.7094 36.6922 15.6627C36.514 15.6118 36.338 15.5652 36.164 15.5227C35.9943 15.4803 35.8373 15.44 35.6931 15.4018C35.5064 14.9479 35.4131 14.5003 35.4131 14.0591C35.4131 14.0336 35.4152 13.8979 35.4195 13.6518C35.428 13.4058 35.5192 13.0812 35.6931 12.6782C35.867 12.2752 36.1131 11.9145 36.4313 11.5964C36.7495 11.2739 37.1164 11.0173 37.5322 10.8264C37.948 10.6355 38.4019 10.5188 38.894 10.4764C38.9916 10.4679 39.0913 10.4636 39.1931 10.4636C39.5919 10.4636 40.0013 10.5252 40.4213 10.6482L40.1222 11.8C39.8337 11.7109 39.541 11.6685 39.244 11.6727C38.947 11.6727 38.6607 11.7152 38.3849 11.8C38.1134 11.8806 37.861 11.9994 37.6276 12.1564C37.3943 12.3133 37.1949 12.5021 37.0295 12.7227C36.8683 12.9391 36.7516 13.183 36.6795 13.4545C36.6286 13.6327 36.6031 13.8173 36.6031 14.0082C36.6031 14.1185 36.6116 14.2288 36.6286 14.3391L39.0658 14.9436C39.4052 15.037 39.6598 15.1897 39.8295 15.4018C39.9992 15.6139 40.084 15.8727 40.084 16.1782C40.084 16.7339 40.0183 17.2197 39.8867 17.6355C39.7552 18.0555 39.5452 18.4033 39.2567 18.6791C38.9683 18.9548 38.5949 19.1627 38.1367 19.3027C37.6828 19.4427 37.1313 19.5127 36.4822 19.5127H35.0758C34.7534 19.5127 34.4416 19.4724 34.1404 19.3918C33.8392 19.3112 33.5549 19.1988 33.2876 19.0545C33.0204 18.9103 32.7743 18.7364 32.5495 18.5327C32.3246 18.3291 32.1273 18.1042 31.9576 17.8582C31.7583 17.5358 31.6076 17.1815 31.5058 16.7955C31.404 16.4094 31.3531 16.0021 31.3531 15.5736C31.3531 15.0433 31.4358 14.4727 31.6013 13.8618C31.771 13.2467 32.017 12.5976 32.3395 11.9145C32.5304 12.0036 32.7086 12.0906 32.874 12.1755C33.0395 12.2561 33.2134 12.3409 33.3958 12.43C32.8358 13.6264 32.5558 14.6636 32.5558 15.5418C32.5558 15.8558 32.594 16.1548 32.6704 16.4391C32.7467 16.7233 32.8528 16.98 32.9886 17.2091C33.2049 17.5485 33.4976 17.8136 33.8667 18.0045C34.2358 18.1997 34.6389 18.2973 35.0758 18.2973H36.4822ZM49.2316 14.7973V16H48.9962C48.3641 16 47.7807 15.737 47.2462 15.2109C46.928 15.6394 46.3701 15.9109 45.5725 16.0255C45.4241 16.0467 45.2671 16.0636 45.1016 16.0764C44.9362 16.0891 44.7644 16.0955 44.5862 16.0955C44.3698 16.0955 44.1513 16.0848 43.9307 16.0636C43.7101 16.0467 43.4938 16.0191 43.2816 15.9809C43.0738 15.9385 42.8722 15.8855 42.6771 15.8218C42.4819 15.7539 42.3059 15.6755 42.1489 15.5864L41.6271 15.2809L42.2253 14.2309L42.7535 14.5364C42.9019 14.6212 43.0822 14.6912 43.2944 14.7464C43.5107 14.7973 43.7398 14.8333 43.9816 14.8545C44.1641 14.8715 44.3465 14.88 44.5289 14.88C44.5925 14.88 44.7007 14.88 44.8535 14.88C45.0062 14.8758 45.1886 14.8588 45.4007 14.8291C45.6468 14.7909 45.8483 14.7379 46.0053 14.67C46.1665 14.5979 46.2683 14.5173 46.3107 14.4282C46.3489 14.3858 46.368 14.3327 46.368 14.2691C46.368 14.2267 46.3532 14.1588 46.3235 14.0655C46.2938 13.9679 46.228 13.8406 46.1262 13.6836L43.7398 10.05L44.7516 9.38818L47.2207 13.1555C47.348 13.3379 47.4753 13.5267 47.6025 13.7218C47.7341 13.9127 47.8719 14.0888 48.0162 14.25C48.1604 14.407 48.311 14.5385 48.468 14.6445C48.6292 14.7464 48.8053 14.7973 48.9962 14.7973H49.2316ZM54.3795 14.7973V16H53.8831C53.4971 16 53.1555 15.9448 52.8586 15.8345C52.5658 15.7242 52.3304 15.5588 52.1522 15.3382C51.711 15.7794 51.0577 16 50.1922 16H48.9704V14.7973H50.1922C50.4977 14.7973 50.7395 14.7676 50.9177 14.7082C51.0958 14.6445 51.2295 14.5682 51.3186 14.4791C51.4119 14.3858 51.4713 14.2839 51.4967 14.1736C51.5264 14.0591 51.5413 13.9509 51.5413 13.8491V11.6982H52.7377V13.8045C52.7377 13.9615 52.761 14.0952 52.8077 14.2055C52.8543 14.3158 52.9137 14.4091 52.9858 14.4855C53.0622 14.5576 53.1449 14.6148 53.234 14.6573C53.3274 14.6997 53.4164 14.7315 53.5013 14.7527C53.5861 14.7739 53.6625 14.7867 53.7304 14.7909C53.7983 14.7952 53.8492 14.7973 53.8831 14.7973H54.3795ZM50.5931 8.76455L51.6749 7.67L52.7822 8.77727L51.6877 9.87182L50.5931 8.76455ZM57.5483 10.82C57.5568 10.8455 57.5738 10.9133 57.5992 11.0236C57.6247 11.1339 57.6523 11.2718 57.682 11.4373C57.7159 11.5985 57.752 11.7788 57.7901 11.9782C57.8283 12.1733 57.8623 12.3727 57.892 12.5764C57.9216 12.7758 57.9471 12.9688 57.9683 13.1555C57.9895 13.3421 58.0001 13.5055 58.0001 13.6455C58.0001 14.0527 57.9323 14.4048 57.7965 14.7018C57.665 14.9945 57.491 15.2385 57.2747 15.4336C57.0626 15.6245 56.8229 15.7667 56.5556 15.86C56.2883 15.9533 56.0189 16 55.7474 16H54.1247V14.7973H55.7474C55.811 14.7973 55.9001 14.7888 56.0147 14.7718C56.1335 14.7506 56.2501 14.7018 56.3647 14.6255C56.4835 14.5491 56.5853 14.4345 56.6701 14.2818C56.7592 14.1291 56.8038 13.917 56.8038 13.6455C56.8038 13.5521 56.7953 13.4355 56.7783 13.2955C56.7656 13.1512 56.7465 12.9985 56.721 12.8373C56.6998 12.6718 56.6744 12.5042 56.6447 12.3345C56.615 12.1606 56.5853 11.9973 56.5556 11.8445C56.5259 11.6918 56.4983 11.5561 56.4729 11.4373C56.4474 11.3185 56.4262 11.2294 56.4092 11.17L57.5483 10.82ZM55.3465 18.31L56.4283 17.2155L57.5356 18.3227L56.441 19.4173L55.3465 18.31ZM62.8302 19.5255C62.1727 19.5255 61.5766 19.3812 61.0421 19.0927C60.5075 18.8085 60.0748 18.4012 59.7439 17.8709C59.5148 17.5103 59.3514 17.1094 59.2539 16.6682C59.1733 16.3288 59.133 15.9724 59.133 15.5991C59.133 15.4888 59.1414 15.2809 59.1584 14.9755C59.1796 14.6658 59.2687 14.2373 59.4257 13.69C59.5827 13.1385 59.8011 12.57 60.0811 11.9845L61.163 12.5C60.9254 12.9921 60.7366 13.4652 60.5966 13.9191C60.4608 14.3688 60.376 14.7952 60.3421 15.1982C60.3293 15.3339 60.323 15.4655 60.323 15.5927C60.323 15.8473 60.3505 16.1167 60.4057 16.4009C60.4651 16.6894 60.5817 16.9694 60.7557 17.2409C60.9763 17.5845 61.2648 17.8497 61.6211 18.0364C61.9775 18.2273 62.3805 18.3227 62.8302 18.3227H64.3257C64.8136 18.3227 65.2102 18.2697 65.5157 18.1636C65.8254 18.0618 66.0651 17.9176 66.2348 17.7309C66.4087 17.5442 66.5254 17.3173 66.5848 17.05C66.6484 16.787 66.6802 16.4942 66.6802 16.1718V11.6982H67.883V16.1718C67.883 17.2918 67.586 18.1297 66.9921 18.6855C66.3981 19.2455 65.5093 19.5255 64.3257 19.5255H62.8302ZM62.8811 11.1955L63.963 10.1009L65.0702 11.2082L63.9757 12.3027L62.8811 11.1955ZM72.7231 16C72.2776 15.9958 71.9085 15.9661 71.6158 15.9109C71.3273 15.8515 71.0812 15.7688 70.8776 15.6627C70.6782 15.5524 70.517 15.4167 70.394 15.2555C70.2752 15.09 70.1818 14.8991 70.114 14.6827C70.0461 14.4621 70.0015 14.2161 69.9803 13.9445C69.9591 13.673 69.9485 13.3718 69.9485 13.0409V6.91909H71.1512V13.0409C71.1512 13.41 71.1618 13.7091 71.1831 13.9382C71.2085 14.1673 71.27 14.3455 71.3676 14.4727C71.4694 14.5958 71.62 14.6806 71.8194 14.7273C72.0231 14.7697 72.3243 14.793 72.7231 14.7973V16ZM77.086 15.1027C77.1157 15.1027 77.156 15.1006 77.2069 15.0964C77.262 15.0921 77.3193 15.0752 77.3787 15.0455C77.4423 15.0158 77.5039 14.9712 77.5632 14.9118C77.6269 14.8482 77.682 14.7612 77.7287 14.6509C77.7796 14.5364 77.8199 14.3921 77.8496 14.2182C77.8835 14.04 77.9005 13.8236 77.9005 13.5691C77.9005 13.5224 77.8963 13.4482 77.8878 13.3464C77.8793 13.2445 77.8602 13.1321 77.8305 13.0091C77.8008 12.8818 77.7563 12.7524 77.6969 12.6209C77.6417 12.4894 77.5654 12.3685 77.4678 12.2582C77.3702 12.1479 77.2514 12.0588 77.1114 11.9909C76.9714 11.9188 76.8017 11.8827 76.6023 11.8827C76.4157 11.8827 76.2566 11.9167 76.1251 11.9845C75.9978 12.0482 75.8896 12.1373 75.8005 12.2518C75.7114 12.3664 75.6372 12.5021 75.5778 12.6591C75.5184 12.8118 75.4632 12.9794 75.4123 13.1618C75.3614 13.34 75.3105 13.5288 75.2596 13.7282C75.2087 13.9233 75.1493 14.1185 75.0814 14.3136C75.302 14.4239 75.5057 14.5279 75.6923 14.6255C75.879 14.723 76.0529 14.8079 76.2142 14.88C76.3754 14.9479 76.526 15.003 76.666 15.0455C76.8102 15.0836 76.9502 15.1027 77.086 15.1027ZM76.6023 10.6864C77.0181 10.6864 77.3787 10.767 77.6842 10.9282C77.9939 11.0852 78.2505 11.2973 78.4542 11.5645C78.6578 11.8318 78.8084 12.1394 78.906 12.4873C79.0078 12.8352 79.0587 13.1958 79.0587 13.5691C79.0587 13.9806 79.0226 14.3348 78.9505 14.6318C78.8826 14.9288 78.7914 15.1791 78.6769 15.3827C78.5623 15.5821 78.4329 15.7433 78.2887 15.8664C78.1487 15.9894 78.0045 16.0827 77.856 16.1464C77.7117 16.21 77.5717 16.2524 77.436 16.2736C77.3002 16.2948 77.1835 16.3055 77.086 16.3055C76.8781 16.3055 76.6787 16.2842 76.4878 16.2418C76.2969 16.1994 76.1017 16.1379 75.9023 16.0573C75.7029 15.9809 75.4929 15.8855 75.2723 15.7709C75.056 15.6564 74.8163 15.527 74.5532 15.3827C74.2054 15.7942 73.7578 16 73.2105 16H72.4787V14.7973H73.2105C73.3717 14.7973 73.5032 14.7379 73.6051 14.6191C73.7111 14.5003 73.8023 14.3455 73.8787 14.1545C73.9551 13.9636 74.0251 13.7452 74.0887 13.4991C74.1523 13.253 74.2245 13.0006 74.3051 12.7418C74.3899 12.483 74.4896 12.2306 74.6042 11.9845C74.7187 11.7385 74.8629 11.52 75.0369 11.3291C75.2151 11.1382 75.4293 10.9833 75.6796 10.8645C75.9342 10.7458 76.2417 10.6864 76.6023 10.6864ZM78.6973 19.5318V18.3291H79.5754C80.0124 18.3291 80.39 18.2761 80.7082 18.17C81.0306 18.0682 81.2958 17.9091 81.5036 17.6927C81.7158 17.4764 81.8706 17.2006 81.9682 16.8655C82.07 16.5303 82.1209 16.1315 82.1209 15.6691V11.6982H83.3236V15.6691C83.3236 16.2758 83.243 16.8167 83.0818 17.2918C82.9248 17.7712 82.6894 18.1764 82.3754 18.5073C82.0615 18.8382 81.6691 19.0906 81.1982 19.2645C80.7315 19.4427 80.1906 19.5318 79.5754 19.5318H78.6973ZM81.58 8.94273L82.6618 7.84818L83.7691 8.95545L82.6745 10.05L81.58 8.94273ZM92.7106 19.5255C92.053 19.5255 91.457 19.3812 90.9224 19.0927C90.3879 18.8085 89.9551 18.4012 89.6242 17.8709C89.3951 17.5103 89.2318 17.1094 89.1342 16.6682C89.0579 16.3288 89.0197 15.9724 89.0197 15.5991C89.0197 15.4888 89.0282 15.2809 89.0451 14.9755C89.0621 14.6658 89.1491 14.2373 89.306 13.69C89.463 13.1385 89.6815 12.57 89.9615 11.9845L91.0433 12.5C90.8057 12.9921 90.617 13.4652 90.477 13.9191C90.3412 14.3688 90.2563 14.7952 90.2224 15.1982C90.2139 15.3339 90.2097 15.4655 90.2097 15.5927C90.2097 15.8473 90.2373 16.1167 90.2924 16.4009C90.3476 16.6894 90.4621 16.9694 90.636 17.2409C90.8567 17.5845 91.1451 17.8497 91.5015 18.0364C91.8579 18.2273 92.2609 18.3227 92.7106 18.3227H94.206C94.6939 18.3227 95.0906 18.2697 95.396 18.1636C95.7057 18.0618 95.9454 17.9176 96.1151 17.7309C96.2891 17.5442 96.4057 17.3173 96.4651 17.05C96.5288 16.787 96.5606 16.4942 96.5606 16.1718V11.6982H97.7633V13.6773C97.7676 13.847 97.7973 14.0018 97.8524 14.1418C97.9118 14.2776 97.9903 14.3942 98.0879 14.4918C98.1854 14.5894 98.3021 14.6658 98.4379 14.7209C98.5779 14.7718 98.7327 14.7973 98.9024 14.7973H99.1506V16H98.9024C98.4866 16 98.107 15.9088 97.7633 15.7264V16.1718C97.7633 17.2918 97.4663 18.1297 96.8724 18.6855C96.2785 19.2455 95.3897 19.5255 94.206 19.5255H92.7106ZM92.7551 11.2209L93.837 10.1264L94.9442 11.2336L93.8497 12.3282L92.7551 11.2209ZM105.849 14.7973V16H104.736C104.349 16 104.008 15.9448 103.711 15.8345C103.418 15.7242 103.183 15.5588 103.005 15.3382C102.563 15.7794 101.91 16 101.045 16H98.881V14.7973H101.045C101.35 14.7973 101.592 14.7676 101.77 14.7082C101.948 14.6445 102.082 14.5682 102.171 14.4791C102.264 14.3858 102.324 14.2839 102.349 14.1736C102.379 14.0591 102.394 13.9509 102.394 13.8491V11.6982H103.59V13.8045C103.59 13.9615 103.613 14.0952 103.66 14.2055C103.711 14.3158 103.772 14.4091 103.845 14.4855C103.917 14.5576 103.997 14.6148 104.086 14.6573C104.18 14.6997 104.269 14.7315 104.354 14.7527C104.439 14.7739 104.515 14.7867 104.583 14.7909C104.651 14.7952 104.702 14.7973 104.736 14.7973H105.849ZM103.787 10.1455L102.782 9.12727L103.775 8.09636L104.806 9.12727L103.787 10.1455ZM101.35 10.1327L100.345 9.11455L101.337 8.08364L102.368 9.11455L101.35 10.1327ZM110.186 15.1027C110.215 15.1027 110.256 15.1006 110.306 15.0964C110.362 15.0921 110.419 15.0752 110.478 15.0455C110.542 15.0158 110.603 14.9712 110.663 14.9118C110.726 14.8482 110.782 14.7612 110.828 14.6509C110.879 14.5364 110.92 14.3921 110.949 14.2182C110.983 14.04 111 13.8236 111 13.5691C111 13.5224 110.996 13.4482 110.987 13.3464C110.979 13.2445 110.96 13.1321 110.93 13.0091C110.9 12.8818 110.856 12.7524 110.796 12.6209C110.741 12.4894 110.665 12.3685 110.567 12.2582C110.47 12.1479 110.351 12.0588 110.211 11.9909C110.071 11.9188 109.901 11.8827 109.702 11.8827C109.515 11.8827 109.356 11.9167 109.225 11.9845C109.097 12.0482 108.989 12.1373 108.9 12.2518C108.811 12.3664 108.737 12.5021 108.677 12.6591C108.618 12.8118 108.563 12.9794 108.512 13.1618C108.461 13.34 108.41 13.5288 108.359 13.7282C108.308 13.9233 108.249 14.1185 108.181 14.3136C108.402 14.4239 108.605 14.5279 108.792 14.6255C108.979 14.723 109.153 14.8079 109.314 14.88C109.475 14.9479 109.626 15.003 109.766 15.0455C109.91 15.0836 110.05 15.1027 110.186 15.1027ZM109.702 10.6864C110.118 10.6864 110.478 10.767 110.784 10.9282C111.093 11.0852 111.35 11.2973 111.554 11.5645C111.757 11.8318 111.908 12.1394 112.006 12.4873C112.107 12.8352 112.158 13.1958 112.158 13.5691C112.158 13.9806 112.122 14.3348 112.05 14.6318C111.982 14.9288 111.891 15.1791 111.776 15.3827C111.662 15.5821 111.533 15.7433 111.388 15.8664C111.248 15.9894 111.104 16.0827 110.956 16.1464C110.811 16.21 110.671 16.2524 110.536 16.2736C110.4 16.2948 110.283 16.3055 110.186 16.3055C109.978 16.3055 109.778 16.2842 109.587 16.2418C109.396 16.1994 109.201 16.1379 109.002 16.0573C108.803 15.9809 108.593 15.8855 108.372 15.7709C108.156 15.6564 107.916 15.527 107.653 15.3827C107.305 15.7942 106.857 16 106.31 16H105.578V14.7973H106.31C106.471 14.7973 106.603 14.7379 106.705 14.6191C106.811 14.5003 106.902 14.3455 106.978 14.1545C107.055 13.9636 107.125 13.7452 107.188 13.4991C107.252 13.253 107.324 13.0006 107.405 12.7418C107.49 12.483 107.589 12.2306 107.704 11.9845C107.818 11.7385 107.963 11.52 108.136 11.3291C108.315 11.1382 108.529 10.9833 108.779 10.8645C109.034 10.7458 109.341 10.6864 109.702 10.6864Z"
                fill="black" />
            <path
                d="M128.5 21.8125C126.279 21.8125 124.192 20.948 122.622 19.3775C120.056 16.8119 119.447 12.9211 121.106 9.69703C121.256 9.4055 121.614 9.29091 121.906 9.44053C122.198 9.59016 122.313 9.94819 122.162 10.2403C120.74 13.0036 121.262 16.3381 123.462 18.538C124.807 19.884 126.596 20.625 128.5 20.625C130.403 20.625 132.193 19.884 133.538 18.538C134.883 17.1919 135.625 15.403 135.625 13.5C135.625 11.5964 134.884 9.80747 133.538 8.46203C132.192 7.11659 130.404 6.375 128.5 6.375C126.596 6.375 124.807 7.11659 123.462 8.46203C123.23 8.69419 122.855 8.69419 122.622 8.46203C122.39 8.22987 122.39 7.85462 122.622 7.62247C124.192 6.05259 126.279 5.1875 128.5 5.1875C130.721 5.1875 132.808 6.05259 134.378 7.62247C135.948 9.19234 136.813 11.2794 136.813 13.5C136.813 15.72 135.948 17.8077 134.378 19.3775C132.808 20.948 130.721 21.8125 128.5 21.8125Z"
                fill="black" />
            <path
                d="M131.468 16.4688C131.338 16.4688 131.207 16.4266 131.098 16.3387L128.129 13.9637C127.988 13.8509 127.906 13.6805 127.906 13.5V8.75C127.906 8.42225 128.172 8.15625 128.5 8.15625C128.828 8.15625 129.094 8.42225 129.094 8.75V13.215L131.84 15.4113C132.096 15.6167 132.137 15.9902 131.932 16.2461C131.815 16.3922 131.643 16.4688 131.468 16.4688Z"
                fill="black" />
        </svg>

    )
}

function Segments({ segments }) {
    return <>
        {
            segments.map((segment, index) => {

                return (<TimedTextRow key={index} start={segment['start']} end={segment['end']} text={segment['text']} />)
            }
            )
        }</>
}

function TimedTextRow({ start, end, text }) {

    return (
        <div className="timed-text-row">
            <span className="timestamp">{end}
                &nbsp;&nbsp; {start}</span>
            <span
                className="text">&nbsp;&nbsp;{text}</span>
            <div className="playback-indicator"
                data-start="0" data-end="3"></div>
        </div>
    )
}


const Pagination = ({ page, pages, setPage }) => {
    // Function to generate the array of page numbers to display, including ellipses
    const generatePageNumbers = (currentPage, totalPages) => {
        const pageNumbers = [];

        // Rule 1: If totalPages is 1, show only '1'
        if (totalPages === 1) {
            pageNumbers.push(1);
            return pageNumbers;
        }

        // Rule 2: If totalPages is between 2 and 6, show all numbers
        if (totalPages >= 2 && totalPages <= 6) {
            for (let i = 1; i <= totalPages; i++) {
                pageNumbers.push(i);
            }
            return pageNumbers;
        }

        // Rule 3: If totalPages is greater than 6 (like the previous example)
        const delta = 2; // How many pages to show on either side of the current page

        // Add first page
        pageNumbers.push(1);

        // Add pages around the current page
        for (let i = currentPage - delta; i <= currentPage + delta; i++) {
            if (i > 1 && i < totalPages) {
                pageNumbers.push(i);
            }
        }

        // Add last page
        pageNumbers.push(totalPages);

        // Remove duplicates and sort
        let uniquePages = [...new Set(pageNumbers)].sort((a, b) => a - b);

        // Add ellipses
        const finalPages = [];
        let lastPage = 0;
        for (const p of uniquePages) {
            if (p - lastPage > 1) {
                finalPages.push('...');
            }
            finalPages.push(p);
            lastPage = p;
        }

        return finalPages;
    };

    const pagesToDisplay = generatePageNumbers(page, pages);

    return (
        <nav className="flex justify-center mt-8">
            {/* Added dir="rtl" for right-to-left display of numbers */}
            <ul className="flex items-center space-x-2 flex-wrap justify-center" dir="rtl">
                {/* Previous button */}
                <li>
                    <button
                        onClick={() => setPage(prev => Math.max(1, prev - 1))}
                        disabled={page === 1}
                        className={`px-4 py-2 rounded-lg transition-all duration-200
              ${page === 1 ? 'text-gray-400 cursor-not-allowed' : 'hover:bg-blue-50 hover:text-blue-800'}
              font-semibold`}
                    >
                        &lt;
                    </button>
                </li>

                {/* Page numbers */}
                {pagesToDisplay.map((p, index) => (
                    <li key={index}>
                        {p === '...' ? (
                            <span className="px-4 py-2 text-gray-500">...</span>
                        ) : (
                            <button

                                onClick={() => setPage(p)}
                                style={{fontFamily:'IRANSansXFaNum',fontStyle:'normal',fontWeight:'300',fontSize:'14px'}}
                               
                                className={`w-8 h-8 flex items-center justify-center rounded-full font-semibold transition-all duration-200
                  ${p === page
                                        ? 'custom_green_bg text-white shadow-md transform scale-105' // Green background for active page
                                        : ' hover:bg-blue-100 hover:text-blue-800'
                                    }`}
                            >
                                {p}
                            </button>
                        )}
                    </li>
                ))}

                {/* Next button */}
                <li>
                    <button
                        onClick={() => setPage(prev => Math.min(pages, prev + 1))}
                        disabled={page === pages}
                        className={`px-4 py-2 rounded-lg transition-all duration-200
              ${page === pages ? 'text-gray-400 cursor-not-allowed' : 'hover:bg-blue-50 hover:text-blue-800'}
              font-semibold`}
                    >
                        &gt;
                    </button>
                </li>
            </ul>
        </nav>
    );
};




